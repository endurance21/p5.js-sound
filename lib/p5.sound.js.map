{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./audiocontext.js","webpack:///./audioWorklet/processorNames.js","webpack:///../node_modules/startaudiocontext/StartAudioContext.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./master.js","webpack:///./helpers.js","webpack:///./amplitude.js","webpack:///./app.js"],"names":["global","TONE_SILENCE_VERSION_LOGGING","audiocontext","window","AudioContext","p5","prototype","getAudioContext","userStartAudio","elements","callback","elt","Element","Array","map","e","StartAudioContext","module","exports","recorderProcessor","soundFileProcessor","amplitudeProcessor","root","factory","amd","define","this","TapListener","element","context","_dragged","_element","_bindedMove","_moved","bind","_bindedEnd","_ended","addEventListener","isStarted","state","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start","resume","startContext","dispose","removeEventListener","promise","Promise","success","checkLoop","requestAnimationFrame","onStarted","tapListeners","bindTapListener","isArray","NodeList","i","length","document","querySelectorAll","jquery","toArray","tap","push","body","then","g","Function","Master","input","createGain","output","limiter","createDynamicsCompressor","threshold","value","ratio","knee","disconnect","meter","fftMeter","soundArray","parts","extensions","p5sound","getMasterVolume","gain","masterVolume","vol","rampTime","tFromNow","now","currentTime","currentVol","cancelScheduledValues","linearRampToValueAtTime","soundOut","_silentNode","freqToMidi","f","mathlog2","Math","log","m","round","midiToFreq","pow","noteToFreq","note","wholeNotes","A","B","C","D","E","F","G","toUpperCase","octave","slice","soundFormats","arguments","toLowerCase","indexOf","disposeSound","registerMethod","_checkFileFormats","paths","path","extTest","split","pop","isFileSupported","pathSplit","pathCore","extension","supported","p","_mathChain","o","math","thisChain","nextChain","type","mathOps","convertToWav","audioBuffer","leftChannel","rightChannel","getChannelData","numberOfChannels","interleaved","interleave","ArrayBuffer","view","DataView","writeUTFBytes","setUint32","setUint16","lng","index","volume","setInt16","result","Float32Array","inputIndex","offset","string","setUint8","charCodeAt","safeBufferSize","idealBufferSize","bufferSize","tempAudioWorkletNode","AudioWorkletNode","processorNames","ScriptProcessorNode","Amplitude","smoothing","_workletNode","outputChannelCount","parameterData","processorOptions","normalize","numInputChannels","port","onmessage","event","data","name","volNorm","stereoVol","stereoVolNorm","setInput","parameters","get","console","Signal","unit","hasOwnProperty","panner","getLevel","channel","toggleNormalize","bool","postMessage","smooth","s","splice"],"mappings":"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","file":"p5.sound.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nglobal.TONE_SILENCE_VERSION_LOGGING = true;\n\nimport StartAudioContext from 'startaudiocontext';\n// import Tone from 'Tone/core/Tone';\n\n// Create the Audio Context\nconst audiocontext = new window.AudioContext();\n\n// Tone and p5.sound share the same audio context\n// Tone.context.dispose();\n// console.log(audiocontext)\n// Tone.setContext(audiocontext);\n\n/**\n * <p>Returns the Audio Context for this sketch. Useful for users\n * who would like to dig deeper into the <a target='_blank' href=\n * 'http://webaudio.github.io/web-audio-api/'>Web Audio API\n * </a>.</p>\n *\n * <p>Some browsers require users to startAudioContext\n * with a user gesture, such as touchStarted in the example below.</p>\n *\n * @for p5\n * @method getAudioContext\n * @return {Object}    AudioContext for this sketch\n * @example\n * <div><code>\n *  function draw() {\n *    background(255);\n *    textAlign(CENTER);\n *\n *    if (getAudioContext().state !== 'running') {\n *      text('click to start audio', width/2, height/2);\n *    } else {\n *      text('audio is enabled', width/2, height/2);\n *    }\n *  }\n *\n *  function touchStarted() {\n *    if (getAudioContext().state !== 'running') {\n *      getAudioContext().resume();\n *    }\n *    var synth = new p5.MonoSynth();\n *    synth.play('A4', 0.5, 0, 0.2);\n *  }\n *\n * </div></code>\n */\np5.prototype.getAudioContext = function () {\n  return audiocontext;\n};\n\n/**\n *  <p>It is not only a good practice to give users control over starting\n *  audio. This policy is enforced by many web browsers, including iOS and\n *  <a href=\"https://goo.gl/7K7WLu\" title=\"Google Chrome's autoplay\n *  policy\">Google Chrome</a>, which create the Web Audio API's\n *  <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\"\n *  title=\"Audio Context @ MDN\">Audio Context</a>\n *  in a suspended state.</p>\n *\n *  <p>In these browser-specific policies, sound will not play until a user\n *  interaction event (i.e. <code>mousePressed()</code>) explicitly resumes\n *  the AudioContext, or starts an audio node. This can be accomplished by\n *  calling <code>start()</code> on a <code>p5.Oscillator</code>,\n *  <code> play()</code> on a <code>p5.SoundFile</code>, or simply\n *  <code>userStartAudio()</code>.</p>\n *\n *  <p><code>userStartAudio()</code> starts the AudioContext on a user\n *  gesture. The default behavior will enable audio on any\n *  mouseUp or touchEnd event. It can also be placed in a specific\n *  interaction function, such as <code>mousePressed()</code> as in the\n *  example below. This method utilizes\n *  <a href=\"https://github.com/tambien/StartAudioContext\">StartAudioContext\n *  </a>, a library by Yotam Mann (MIT Licence, 2016).</p>\n *  @param  {Element|Array}   [element(s)] This argument can be an Element,\n *                                Selector String, NodeList, p5.Element,\n *                                jQuery Element, or an Array of any of those.\n *  @param  {Function} [callback] Callback to invoke when the AudioContext\n *                                has started\n *  @return {Promise}            Returns a Promise that resolves when\n *                                       the AudioContext state is 'running'\n *  @method userStartAudio\n *  @for p5\n *  @example\n *  <div><code>\n *  function setup() {\n *    // mimics the autoplay policy\n *    getAudioContext().suspend();\n *\n *    let mySynth = new p5.MonoSynth();\n *\n *    // This won't play until the context has resumed\n *    mySynth.play('A6');\n *  }\n *  function draw() {\n *    background(220);\n *    textAlign(CENTER, CENTER);\n *    text(getAudioContext().state, width/2, height/2);\n *  }\n *  function mousePressed() {\n *    userStartAudio();\n *  }\n *  </code></div>\n */\np5.prototype.userStartAudio = function (elements, callback) {\n  var elt = elements;\n  if (elements instanceof p5.Element) {\n    elt = elements.elt;\n  } else if (elements instanceof Array && elements[0] instanceof p5.Element) {\n    elt = elements.map(function (e) {\n      return e.elt;\n    });\n  }\n  return StartAudioContext(audiocontext, elt, callback);\n};\n\nexport default audiocontext;\n","module.exports = {\n  recorderProcessor: 'recorder-processor',\n  soundFileProcessor: 'sound-file-processor',\n  amplitudeProcessor: 'amplitude-processor',\n};\n","/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([], factory)\n\t } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n\t} else {\n\t\troot.StartAudioContext = factory()\n  }\n}(this, function () {\n\n\t//TAP LISTENER/////////////////////////////////////////////////////////////\n\n\t/**\n\t * @class  Listens for non-dragging tap ends on the given element\n\t * @param {Element} element\n\t * @internal\n\t */\n\tvar TapListener = function(element, context){\n\n\t\tthis._dragged = false\n\n\t\tthis._element = element\n\n\t\tthis._bindedMove = this._moved.bind(this)\n\t\tthis._bindedEnd = this._ended.bind(this, context)\n\n\t\telement.addEventListener(\"touchstart\", this._bindedEnd)\n\t\telement.addEventListener(\"touchmove\", this._bindedMove)\n\t\telement.addEventListener(\"touchend\", this._bindedEnd)\n\t\telement.addEventListener(\"mouseup\", this._bindedEnd)\n\t}\n\n\t/**\n\t * drag move event\n\t */\n\tTapListener.prototype._moved = function(e){\n\t\tthis._dragged = true\n\t};\n\n\t/**\n\t * tap ended listener\n\t */\n\tTapListener.prototype._ended = function(context){\n\t\tif (!this._dragged){\n\t\t\tstartContext(context)\n\t\t}\n\t\tthis._dragged = false\n\t};\n\n\t/**\n\t * remove all the bound events\n\t */\n\tTapListener.prototype.dispose = function(){\n\t\tthis._element.removeEventListener(\"touchstart\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"touchmove\", this._bindedMove)\n\t\tthis._element.removeEventListener(\"touchend\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"mouseup\", this._bindedEnd)\n\t\tthis._bindedMove = null\n\t\tthis._bindedEnd = null\n\t\tthis._element = null\n\t};\n\n\t//END TAP LISTENER/////////////////////////////////////////////////////////\n\n\t/**\n\t * Plays a silent sound and also invoke the \"resume\" method\n\t * @param {AudioContext} context\n\t * @private\n\t */\n\tfunction startContext(context){\n\t\t// this accomplishes the iOS specific requirement\n\t\tvar buffer = context.createBuffer(1, 1, context.sampleRate)\n\t\tvar source = context.createBufferSource()\n\t\tsource.buffer = buffer\n\t\tsource.connect(context.destination)\n\t\tsource.start(0)\n\n\t\t// resume the audio context\n\t\tif (context.resume){\n\t\t\tcontext.resume()\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the audio context is started\n\t * @param  {AudioContext}  context\n\t * @return {Boolean}\n\t * @private\n\t */\n\tfunction isStarted(context){\n\t\t return context.state === \"running\"\n\t}\n\n\t/**\n\t * Invokes the callback as soon as the AudioContext\n\t * is started\n\t * @param  {AudioContext}   context\n\t * @param  {Function} callback\n\t */\n\tfunction onStarted(context, callback){\n\n\t\tfunction checkLoop(){\n\t\t\tif (isStarted(context)){\n\t\t\t\tcallback()\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(checkLoop)\n\t\t\t\tif (context.resume){\n\t\t\t\t\tcontext.resume()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isStarted(context)){\n\t\t\tcallback()\n\t\t} else {\n\t\t\tcheckLoop()\n\t\t}\n\t}\n\n\t/**\n\t * Add a tap listener to the audio context\n\t * @param  {Array|Element|String|jQuery} element\n\t * @param {Array} tapListeners\n\t */\n\tfunction bindTapListener(element, tapListeners, context){\n\t\tif (Array.isArray(element) || (NodeList && element instanceof NodeList)){\n\t\t\tfor (var i = 0; i < element.length; i++){\n\t\t\t\tbindTapListener(element[i], tapListeners, context)\n\t\t\t}\n\t\t} else if (typeof element === \"string\"){\n\t\t\tbindTapListener(document.querySelectorAll(element), tapListeners, context)\n\t\t} else if (element.jquery && typeof element.toArray === \"function\"){\n\t\t\tbindTapListener(element.toArray(), tapListeners, context)\n\t\t} else if (Element && element instanceof Element){\n\t\t\t//if it's an element, create a TapListener\n\t\t\tvar tap = new TapListener(element, context)\n\t\t\ttapListeners.push(tap)\n\t\t} \n\t}\n\n\t/**\n\t * @param {AudioContext} context The AudioContext to start.\n\t * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n\t *                                               to bind tap event listeners\n\t *                                               which will start the AudioContext. If\n\t *                                               no elements are given, it will bind\n\t *                                               to the document.body.\n\t * @param {Function=} callback The callback to invoke when the AudioContext is started.\n\t * @return {Promise} The promise is invoked when the AudioContext\n\t *                       is started.\n\t */\n\tfunction StartAudioContext(context, elements, callback){\n\n\t\t//the promise is invoked when the AudioContext is started\n\t\tvar promise = new Promise(function(success) {\n\t\t\tonStarted(context, success)\n\t\t})\n\n\t\t// The TapListeners bound to the elements\n\t\tvar tapListeners = []\n\n\t\t// add all the tap listeners\n\t\tif (!elements){\n\t\t\telements = document.body\n\t\t}\n\t\tbindTapListener(elements, tapListeners, context)\n\n\t\t//dispose all these tap listeners when the context is started\n\t\tpromise.then(function(){\n\t\t\tfor (var i = 0; i < tapListeners.length; i++){\n\t\t\t\ttapListeners[i].dispose()\n\t\t\t}\n\t\t\ttapListeners = null\n\n\t\t\tif (callback){\n\t\t\t\tcallback()\n\t\t\t}\n\t\t})\n\n\t\treturn promise\n\t}\n\n\treturn StartAudioContext\n}))","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import audiocontext from './audiocontext';\n// Master contains the master sound output.\nvar Master = function () {\n  this.input = audiocontext.createGain();\n  this.output = audiocontext.createGain();\n\n  //put a hard limiter on the output\n  this.limiter = audiocontext.createDynamicsCompressor();\n  this.limiter.threshold.value = -3;\n  this.limiter.ratio.value = 20;\n  this.limiter.knee.value = 1;\n\n  this.audiocontext = audiocontext;\n\n  this.output.disconnect();\n\n  // connect input to limiter\n  this.input.connect(this.limiter);\n\n  // connect limiter to output\n  this.limiter.connect(this.output);\n\n  // meter is just for global Amplitude / FFT analysis\n  this.meter = audiocontext.createGain();\n  this.fftMeter = audiocontext.createGain();\n  this.output.connect(this.meter);\n  this.output.connect(this.fftMeter);\n\n  // connect output to destination\n  this.output.connect(this.audiocontext.destination);\n\n  // an array of all sounds in the sketch\n  this.soundArray = [];\n  // an array of all musical parts in the sketch\n  this.parts = [];\n\n  // file extensions to search for\n  this.extensions = [];\n};\n\n// create a single instance of the p5Sound / master output for use within this sketch\nconst p5sound = new Master();\n\n/**\n * Returns a number representing the master amplitude (volume) for sound\n * in this sketch.\n *\n * @method getMasterVolume\n * @return {Number} Master amplitude (volume) for sound in this sketch.\n *                  Should be between 0.0 (silence) and 1.0.\n */\np5.prototype.getMasterVolume = function () {\n  return p5sound.output.gain.value;\n};\n\n/**\n *  <p>Scale the output of all sound in this sketch</p>\n *  Scaled between 0.0 (silence) and 1.0 (full volume).\n *  1.0 is the maximum amplitude of a digital sound, so multiplying\n *  by greater than 1.0 may cause digital distortion. To\n *  fade, provide a <code>rampTime</code> parameter. For more\n *  complex fades, see the Envelope class.\n *\n *  Alternately, you can pass in a signal source such as an\n *  oscillator to modulate the amplitude with an audio signal.\n *\n *  <p><b>How This Works</b>: When you load the p5.sound module, it\n *  creates a single instance of p5sound. All sound objects in this\n *  module output to p5sound before reaching your computer's output.\n *  So if you change the amplitude of p5sound, it impacts all of the\n *  sound in this module.</p>\n *\n *  <p>If no value is provided, returns a Web Audio API Gain Node</p>\n *\n *  @method  masterVolume\n *  @param {Number|Object} volume  Volume (amplitude) between 0.0\n *                                     and 1.0 or modulating signal/oscillator\n *  @param {Number} [rampTime]  Fade for t seconds\n *  @param {Number} [timeFromNow]  Schedule this event to happen at\n *                                 t seconds in the future\n */\np5.prototype.masterVolume = function (vol, rampTime = 0, tFromNow = 0) {\n  if (typeof vol === 'number') {\n    var now = p5sound.audiocontext.currentTime;\n    var currentVol = p5sound.output.gain.value;\n    p5sound.output.gain.cancelScheduledValues(now + tFromNow);\n    p5sound.output.gain.linearRampToValueAtTime(currentVol, now + tFromNow);\n    p5sound.output.gain.linearRampToValueAtTime(vol, now + tFromNow + rampTime);\n  } else if (vol) {\n    vol.connect(p5sound.output.gain);\n  } else {\n    // return the Gain Node\n    return p5sound.output.gain;\n  }\n};\n\n/**\n *  `p5.soundOut` is the p5.sound master output. It sends output to\n *  the destination of this window's web audio context. It contains\n *  Web Audio API nodes including a dyanmicsCompressor (<code>.limiter</code>),\n *  and Gain Nodes for <code>.input</code> and <code>.output</code>.\n *\n *  @property {Object} soundOut\n */\np5.prototype.soundOut = p5.soundOut = p5sound;\n\n// a silent connection to the DesinationNode\n// which will ensure that anything connected to it\n// will not be garbage collected\np5.soundOut._silentNode = p5sound.audiocontext.createGain();\np5.soundOut._silentNode.gain.value = 0;\np5.soundOut._silentNode.connect(p5sound.audiocontext.destination);\n\nexport default p5sound;\n","'use strict';\nimport p5sound from './master';\nimport processorNames from './audioWorklet/processorNames';\n/**\n * @for p5\n */\n\n/**\n * Returns a number representing the sample rate, in samples per second,\n * of all sound objects in this audio context. It is determined by the\n * sampling rate of your operating system's sound card, and it is not\n * currently possile to change.\n * It is often 44100, or twice the range of human hearing.\n *\n * @method sampleRate\n * @return {Number} samplerate samples per second\n */\np5.prototype.sampleRate = function () {\n  return p5sound.audiocontext.sampleRate;\n};\n\n/**\n *  Returns the closest MIDI note value for\n *  a given frequency.\n *\n *  @method freqToMidi\n *  @param  {Number} frequency A freqeuncy, for example, the \"A\"\n *                             above Middle C is 440Hz\n *  @return {Number}   MIDI note value\n */\np5.prototype.freqToMidi = function (f) {\n  var mathlog2 = Math.log(f / 440) / Math.log(2);\n  var m = Math.round(12 * mathlog2) + 69;\n  return m;\n};\n\n/**\n *  Returns the frequency value of a MIDI note value.\n *  General MIDI treats notes as integers where middle C\n *  is 60, C# is 61, D is 62 etc. Useful for generating\n *  musical frequencies with oscillators.\n *\n *  @method  midiToFreq\n *  @param  {Number} midiNote The number of a MIDI note\n *  @return {Number} Frequency value of the given MIDI note\n *  @example\n *  <div><code>\n *  let midiNotes = [60, 64, 67, 72];\n *  let noteIndex = 0;\n *  let midiVal, freq;\n *\n *  function setup() {\n *    let cnv = createCanvas(100, 100);\n *    cnv.mousePressed(startSound);\n *    osc = new p5.TriOsc();\n *    env = new p5.Envelope();\n *  }\n *\n *  function draw() {\n *    background(220);\n *    text('tap to play', 10, 20);\n *    if (midiVal) {\n *      text('MIDI: ' + midiVal, 10, 40);\n *      text('Freq: ' + freq, 10, 60);\n *    }\n *  }\n *\n *  function startSound() {\n *    // see also: userStartAudio();\n *    osc.start();\n *\n *    midiVal = midiNotes[noteIndex % midiNotes.length];\n *    freq = midiToFreq(midiVal);\n *    osc.freq(freq);\n *    env.ramp(osc, 0, 1.0, 0);\n *\n *    noteIndex++;\n *  }\n *  </code></div>\n */\nexport var midiToFreq = (p5.prototype.midiToFreq = function (m) {\n  return 440 * Math.pow(2, (m - 69) / 12.0);\n});\n\n// This method converts ANSI notes specified as a string \"C4\", \"Eb3\" to a frequency\nexport var noteToFreq = function (note) {\n  if (typeof note !== 'string') {\n    return note;\n  }\n  var wholeNotes = { A: 21, B: 23, C: 24, D: 26, E: 28, F: 29, G: 31 };\n  var value = wholeNotes[note[0].toUpperCase()];\n  var octave = ~~note.slice(-1);\n  value += 12 * (octave - 1);\n\n  switch (note[1]) {\n    case '#':\n      value += 1;\n      break;\n    case 'b':\n      value -= 1;\n      break;\n    default:\n      break;\n  }\n  return midiToFreq(value);\n};\n\n/**\n *  List the SoundFile formats that you will include. LoadSound\n *  will search your directory for these extensions, and will pick\n *  a format that is compatable with the client's web browser.\n *  <a href=\"http://media.io/\">Here</a> is a free online file\n *  converter.\n *\n *  @method soundFormats\n *  @param {String} [...formats] i.e. 'mp3', 'wav', 'ogg'\n *  @example\n *  <div><code>\n *  function preload() {\n *    // set the global sound formats\n *    soundFormats('mp3', 'ogg');\n *\n *    // load either beatbox.mp3, or .ogg, depending on browser\n *    mySound = loadSound('assets/beatbox.mp3');\n *  }\n *\n *  function setup() {\n *       let cnv = createCanvas(100, 100);\n *       background(220);\n *       text('sound loaded! tap to play', 10, 20, width - 20);\n *       cnv.mousePressed(function() {\n *         mySound.play();\n *       });\n *     }\n *  </code></div>\n */\np5.prototype.soundFormats = function () {\n  // reset extensions array\n  p5sound.extensions = [];\n  // add extensions\n  for (var i = 0; i < arguments.length; i++) {\n    arguments[i] = arguments[i].toLowerCase();\n    if (['mp3', 'wav', 'ogg', 'm4a', 'aac'].indexOf(arguments[i]) > -1) {\n      p5sound.extensions.push(arguments[i]);\n    } else {\n      throw arguments[i] + ' is not a valid sound format!';\n    }\n  }\n};\n\np5.prototype.disposeSound = function () {\n  for (var i = 0; i < p5sound.soundArray.length; i++) {\n    p5sound.soundArray[i].dispose();\n  }\n};\n\n// register removeSound to dispose of p5sound SoundFiles, Convolvers,\n// Oscillators etc when sketch ends\np5.prototype.registerMethod('remove', p5.prototype.disposeSound);\n\np5.prototype._checkFileFormats = function (paths) {\n  var path;\n  // if path is a single string, check to see if extension is provided\n  if (typeof paths === 'string') {\n    path = paths;\n    // see if extension is provided\n    var extTest = path.split('.').pop();\n    // if an extension is provided...\n    if (['mp3', 'wav', 'ogg', 'm4a', 'aac'].indexOf(extTest) > -1) {\n      if (!p5.prototype.isFileSupported(extTest)) {\n        var pathSplit = path.split('.');\n        var pathCore = pathSplit[pathSplit.length - 1];\n        for (let i = 0; i < p5sound.extensions.length; i++) {\n          const extension = p5sound.extensions[i];\n          const supported = p5.prototype.isFileSupported(extension);\n          if (supported) {\n            pathCore = '';\n            if (pathSplit.length === 2) {\n              pathCore += pathSplit[0];\n            }\n            for (let i = 1; i <= pathSplit.length - 2; i++) {\n              var p = pathSplit[i];\n              pathCore += '.' + p;\n            }\n            path = pathCore += '.';\n            path = path += extension;\n            break;\n          }\n        }\n      }\n    }\n    // if no extension is provided...\n    else {\n      for (let i = 0; i < p5sound.extensions.length; i++) {\n        const extension = p5sound.extensions[i];\n        const supported = p5.prototype.isFileSupported(extension);\n        if (supported) {\n          path = path + '.' + extension;\n          break;\n        }\n      }\n    }\n  } // end 'if string'\n\n  // path can either be a single string, or an array\n  else if (typeof paths === 'object') {\n    for (var i = 0; i < paths.length; i++) {\n      var extension = paths[i].split('.').pop();\n      var supported = p5.prototype.isFileSupported(extension);\n      if (supported) {\n        // console.log('.'+extension + ' is ' + supported +\n        //  ' supported by your browser.');\n        path = paths[i];\n        break;\n      }\n    }\n  }\n  return path;\n};\n\n/**\n *  Used by Osc and Envelope to chain signal math\n */\np5.prototype._mathChain = function (o, math, thisChain, nextChain, type) {\n  // if this type of math already exists in the chain, replace it\n  for (var i in o.mathOps) {\n    if (o.mathOps[i] instanceof type) {\n      o.mathOps[i].dispose();\n      thisChain = i;\n      if (thisChain < o.mathOps.length - 1) {\n        nextChain = o.mathOps[i + 1];\n      }\n    }\n  }\n  o.mathOps[thisChain - 1].disconnect();\n  o.mathOps[thisChain - 1].connect(math);\n  math.connect(nextChain);\n  o.mathOps[thisChain] = math;\n  return o;\n};\n\n// helper methods to convert audio file as .wav format,\n// will use as saving .wav file and saving blob object\n// Thank you to Matt Diamond's RecorderJS (MIT License)\n// https://github.com/mattdiamond/Recorderjs\nexport function convertToWav(audioBuffer) {\n  var leftChannel, rightChannel;\n  leftChannel = audioBuffer.getChannelData(0);\n\n  // handle mono files\n  if (audioBuffer.numberOfChannels > 1) {\n    rightChannel = audioBuffer.getChannelData(1);\n  } else {\n    rightChannel = leftChannel;\n  }\n\n  var interleaved = interleave(leftChannel, rightChannel);\n\n  // create the buffer and view to create the .WAV file\n  var buffer = new window.ArrayBuffer(44 + interleaved.length * 2);\n  var view = new window.DataView(buffer);\n\n  // write the WAV container,\n  // check spec at: https://web.archive.org/web/20171215131933/http://tiny.systems/software/soundProgrammer/WavFormatDocs.pdf\n\n  // RIFF chunk descriptor\n  writeUTFBytes(view, 0, 'RIFF');\n  view.setUint32(4, 36 + interleaved.length * 2, true);\n  writeUTFBytes(view, 8, 'WAVE');\n  // FMT sub-chunk\n  writeUTFBytes(view, 12, 'fmt ');\n  view.setUint32(16, 16, true);\n  view.setUint16(20, 1, true);\n  // stereo (2 channels)\n  view.setUint16(22, 2, true);\n  view.setUint32(24, p5sound.audiocontext.sampleRate, true);\n  view.setUint32(28, p5sound.audiocontext.sampleRate * 4, true);\n  view.setUint16(32, 4, true);\n  view.setUint16(34, 16, true);\n  // data sub-chunk\n  writeUTFBytes(view, 36, 'data');\n  view.setUint32(40, interleaved.length * 2, true);\n\n  // write the PCM samples\n  var lng = interleaved.length;\n  var index = 44;\n  var volume = 1;\n  for (var i = 0; i < lng; i++) {\n    view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n    index += 2;\n  }\n\n  return view;\n}\n\n// helper methods to save waves\nfunction interleave(leftChannel, rightChannel) {\n  var length = leftChannel.length + rightChannel.length;\n  var result = new Float32Array(length);\n\n  var inputIndex = 0;\n\n  for (var index = 0; index < length; ) {\n    result[index++] = leftChannel[inputIndex];\n    result[index++] = rightChannel[inputIndex];\n    inputIndex++;\n  }\n  return result;\n}\n\nfunction writeUTFBytes(view, offset, string) {\n  var lng = string.length;\n  for (var i = 0; i < lng; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport function safeBufferSize(idealBufferSize) {\n  let bufferSize = idealBufferSize;\n\n  // if the AudioWorkletNode is actually a ScriptProcessorNode created via polyfill,\n  // make sure that our chosen buffer size isn't smaller than the buffer size automatically\n  // selected by the polyfill\n  // reference: https://github.com/GoogleChromeLabs/audioworklet-polyfill/issues/13#issuecomment-425014930\n  let tempAudioWorkletNode = new AudioWorkletNode(\n    p5sound.audiocontext,\n    processorNames.soundFileProcessor\n  );\n  if (tempAudioWorkletNode instanceof ScriptProcessorNode) {\n    bufferSize = tempAudioWorkletNode.bufferSize;\n  }\n  tempAudioWorkletNode.disconnect();\n  tempAudioWorkletNode = null;\n\n  return bufferSize;\n}\n\n// export default {\n//   // convertToWav: convertToWav,\n//   // midiToFreq: midiToFreq,\n//   // noteToFreq: noteToFreq,\n//   // safeBufferSize: safeBufferSize\n// };\n","'use strict';\nimport p5sound from './master';\nimport { safeBufferSize } from './helpers';\nimport processorNames from './audioWorklet/processorNames';\n\n/**\n *  Amplitude measures volume between 0.0 and 1.0.\n *  Listens to all p5sound by default, or use setInput()\n *  to listen to a specific sound source. Accepts an optional\n *  smoothing value, which defaults to 0.\n *\n *  @class p5.Amplitude\n *  @constructor\n *  @param {Number} [smoothing] between 0.0 and .999 to smooth\n *                             amplitude readings (defaults to 0)\n *  @example\n *  <div><code>\n *  let sound, amplitude;\n *\n *  function preload(){\n *    sound = loadSound('assets/beat.mp3');\n *  }\n *  function setup() {\n *    let cnv = createCanvas(100,100);\n *    cnv.mouseClicked(toggleSound);\n *    amplitude = new p5.Amplitude();\n *  }\n *\n *  function draw() {\n *    background(220);\n *    text('tap to play', 20, 20);\n *\n *    let level = amplitude.getLevel();\n *    let size = map(level, 0, 1, 0, 200);\n *    ellipse(width/2, height/2, size, size);\n *  }\n *\n *  function toggleSound() {\n *    if (sound.isPlaying() ){\n *      sound.stop();\n *    } else {\n *      sound.play();\n *    }\n *  }\n *\n *  </code></div>\n */\np5.Amplitude = function (smoothing) {\n  // Set to 2048 for now. In future iterations, this should be inherited or parsed from p5sound's default\n  this.bufferSize = safeBufferSize(2048);\n\n  // set audio context\n  this.audiocontext = p5sound.audiocontext;\n  this._workletNode = new AudioWorkletNode(\n    this.audiocontext,\n    processorNames.amplitudeProcessor,\n    {\n      outputChannelCount: [1],\n\n      parameterData: { smoothing: smoothing || 0 },\n      processorOptions: {\n        normalize: false,\n        smoothing: smoothing || 0,\n        numInputChannels: 2,\n        bufferSize: this.bufferSize,\n      },\n    }\n  );\n\n  this._workletNode.port.onmessage = function (event) {\n    if (event.data.name === 'amplitude') {\n      this.volume = event.data.volume;\n      this.volNorm = event.data.volNorm;\n      this.stereoVol = event.data.stereoVol;\n      this.stereoVolNorm = event.data.stereoVolNorm;\n    }\n  }.bind(this);\n\n  // for connections\n  this.input = this._workletNode;\n\n  this.output = this.audiocontext.createGain();\n\n  // the variables to return\n  this.volume = 0;\n  this.volNorm = 0;\n  this.stereoVol = [0, 0];\n  this.stereoVolNorm = [0, 0];\n\n  this.normalize = false;\n\n  this._workletNode.connect(this.output);\n  this.output.gain.value = 0;\n\n  // this may only be necessary because of a Chrome bug\n  this.output.connect(this.audiocontext.destination);\n\n  // connect to p5sound master output by default, unless set by input()\n  p5sound.meter.connect(this._workletNode);\n\n  // add this p5.SoundFile to the soundArray\n  p5sound.soundArray.push(this);\n};\n\n/**\n *  Connects to the p5sound instance (master output) by default.\n *  Optionally, you can pass in a specific source (i.e. a soundfile).\n *\n *  @method setInput\n *  @for p5.Amplitude\n *  @param {soundObject|undefined} [snd] set the sound source\n *                                       (optional, defaults to\n *                                       master output)\n *  @param {Number|undefined} [smoothing] a range between 0.0 and 1.0\n *                                        to smooth amplitude readings\n *  @example\n *  <div><code>\n *  function preload(){\n *    sound1 = loadSound('assets/beat.mp3');\n *    sound2 = loadSound('assets/drum.mp3');\n *  }\n *  function setup(){\n *    cnv = createCanvas(100, 100);\n *    cnv.mouseClicked(toggleSound);\n *\n *    amplitude = new p5.Amplitude();\n *    amplitude.setInput(sound2);\n *  }\n *\n *  function draw() {\n *    background(220);\n *    text('tap to play', 20, 20);\n *\n *    let level = amplitude.getLevel();\n *    let size = map(level, 0, 1, 0, 200);\n *    ellipse(width/2, height/2, size, size);\n *  }\n *\n *  function toggleSound(){\n *    if (sound1.isPlaying() && sound2.isPlaying()) {\n *      sound1.stop();\n *      sound2.stop();\n *    } else {\n *      sound1.play();\n *      sound2.play();\n *    }\n *  }\n *  </code></div>\n */\np5.Amplitude.prototype.setInput = function (source, smoothing) {\n  p5sound.meter.disconnect();\n\n  if (smoothing) {\n    this._workletNode.parameters.get('smoothing').value = smoothing;\n  }\n\n  // connect to the master out of p5s instance if no snd is provided\n  if (source == null) {\n    console.log(\n      'Amplitude input source is not ready! Connecting to master output instead'\n    );\n    p5sound.meter.connect(this._workletNode);\n  }\n\n  // if it is a p5.Signal\n  else if (source instanceof p5.Signal) {\n    source.output.connect(this._workletNode);\n  }\n  // connect to the sound if it is available\n  else if (source) {\n    source.connect(this._workletNode);\n    this._workletNode.disconnect();\n    this._workletNode.connect(this.output);\n  }\n\n  // otherwise, connect to the master out of p5s instance (default)\n  else {\n    p5sound.meter.connect(this._workletNode);\n  }\n};\n\np5.Amplitude.prototype.connect = function (unit) {\n  if (unit) {\n    if (unit.hasOwnProperty('input')) {\n      this.output.connect(unit.input);\n    } else {\n      this.output.connect(unit);\n    }\n  } else {\n    this.output.connect(this.panner.connect(p5sound.input));\n  }\n};\n\np5.Amplitude.prototype.disconnect = function () {\n  if (this.output) {\n    this.output.disconnect();\n  }\n};\n\n/**\n *  Returns a single Amplitude reading at the moment it is called.\n *  For continuous readings, run in the draw loop.\n *\n *  @method getLevel\n *  @for p5.Amplitude\n *  @param {Number} [channel] Optionally return only channel 0 (left) or 1 (right)\n *  @return {Number}       Amplitude as a number between 0.0 and 1.0\n *  @example\n *  <div><code>\n *  function preload(){\n *    sound = loadSound('assets/beat.mp3');\n *  }\n *\n *  function setup() {\n *    let cnv = createCanvas(100, 100);\n *    cnv.mouseClicked(toggleSound);\n *    amplitude = new p5.Amplitude();\n *  }\n *\n *  function draw() {\n *    background(220, 150);\n *    textAlign(CENTER);\n *    text('tap to play', width/2, 20);\n *\n *    let level = amplitude.getLevel();\n *    let size = map(level, 0, 1, 0, 200);\n *    ellipse(width/2, height/2, size, size);\n *  }\n *\n *  function toggleSound(){\n *    if (sound.isPlaying()) {\n *      sound.stop();\n *    } else {\n *      sound.play();\n *    }\n *  }\n *  </code></div>\n */\np5.Amplitude.prototype.getLevel = function (channel) {\n  if (typeof channel !== 'undefined') {\n    if (this.normalize) {\n      return this.stereoVolNorm[channel];\n    } else {\n      return this.stereoVol[channel];\n    }\n  } else if (this.normalize) {\n    return this.volNorm;\n  } else {\n    return this.volume;\n  }\n};\n\n/**\n * Determines whether the results of Amplitude.process() will be\n * Normalized. To normalize, Amplitude finds the difference the\n * loudest reading it has processed and the maximum amplitude of\n * 1.0. Amplitude adds this difference to all values to produce\n * results that will reliably map between 0.0 and 1.0. However,\n * if a louder moment occurs, the amount that Normalize adds to\n * all the values will change. Accepts an optional boolean parameter\n * (true or false). Normalizing is off by default.\n *\n * @method toggleNormalize\n * @for p5.Amplitude\n * @param {boolean} [boolean] set normalize to true (1) or false (0)\n */\np5.Amplitude.prototype.toggleNormalize = function (bool) {\n  if (typeof bool === 'boolean') {\n    this.normalize = bool;\n  } else {\n    this.normalize = !this.normalize;\n  }\n  this._workletNode.port.postMessage({\n    name: 'toggleNormalize',\n    normalize: this.normalize,\n  });\n};\n\n/**\n *  Smooth Amplitude analysis by averaging with the last analysis\n *  frame. Off by default.\n *\n *  @method smooth\n *  @for p5.Amplitude\n *  @param {Number} set smoothing from 0.0 <= 1\n */\np5.Amplitude.prototype.smooth = function (s) {\n  if (s >= 0 && s < 1) {\n    this._workletNode.port.postMessage({ name: 'smoothing', smoothing: s });\n  } else {\n    console.log('Error: smoothing must be between 0 and 1');\n  }\n};\n\np5.Amplitude.prototype.dispose = function () {\n  // remove reference from soundArray\n  var index = p5sound.soundArray.indexOf(this);\n  p5sound.soundArray.splice(index, 1);\n\n  if (this.input) {\n    this.input.disconnect();\n    delete this.input;\n  }\n  if (this.output) {\n    this.output.disconnect();\n    delete this.output;\n  }\n\n  this._workletNode.disconnect();\n  delete this._workletNode;\n};\n","// import 'audioworklet-polyfill';\n// import './shims';\n// import './audiocontext';\nimport './master';\n// import './helpers';\n// import './errorHandler';\n// import './audioWorklet';\n// import './panner';\n// import './soundfile';\nimport './amplitude';\n// import './fft';\n// import './signal';\n// import './oscillator';\n// import './envelope';\n// import './pulse';\n// import './noise';\n// import './audioin';\n// import './filter';\n// import './eq';\n// import './panner3d';\n// import './listener3d';\n// import './delay';\n// import './reverb';\n// import './metro';\n// import './looper';\n// import './soundLoop';\n// import './compressor';\n// import './soundRecorder';\n// import './peakDetect';\n// import './gain';\n// import './monosynth';\n// import './polysynth';\n// import './distortion';\n// import './audioVoice';\n// import './monosynth';\n// import './polysynth';\n"],"sourceRoot":""}